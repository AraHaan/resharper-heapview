using System;

class C {
  public void M1<T>(T t) {
    // optimized in fw/core
    if (t != null) { }
    if ((object) t != null) { }
    if (null == (t)) { }
    if (t is null) { }
    if ((object) t is null) { }
    if (t is { }) { }
    if (ReferenceEquals(t, null)) { }
    t?.|ToString|(0)(); // optimized ?, possible callvirt
    if (t is object) { } // optimized

    // type checks are boxings in .net fw
    if (t is |IComparable|(1)) { }
    if (t is |IEquatable<T>|(2) _) { }
    if (t is |ValueType|(3) { }) { }
    if (t is |int|(4)) { }
    if (t is |byte|(5) b) { }
  }

  public void M2<T>(T t) where T : struct {
    // type checks are boxings in .net fw
    if (t is |IComparable|(6)) { }
    if (t is |IEquatable<T>|(7)) { }
    if (t is ValueType _) { } // except me
    if (t is |int|(8)) { }
    if (t is |byte|(9) b) { }
  }
}
---------------------------------------------------------
(0): ReSharper HeapView Boxing: Possible boxing allocation: inherited 'System.Object' virtual method call on value type instance
(1): ReSharper HeapView Boxing: Possible boxing allocation: type testing 'T' value for 'IComparable' type possibly requires boxing of value type
(2): ReSharper HeapView Boxing: Possible boxing allocation: type testing 'T' value for 'IEquatable<T>' type possibly requires boxing of value type
(3): ReSharper HeapView Boxing: Possible boxing allocation: type testing 'T' value for 'ValueType' type possibly requires boxing of value type
(4): ReSharper HeapView Boxing: Possible boxing allocation: type testing 'T' value for 'int' type possibly requires boxing of value type
(5): ReSharper HeapView Boxing: Possible boxing allocation: type testing 'T' value for 'byte' type possibly requires boxing of value type
(6): ReSharper HeapView Boxing: Boxing allocation: type testing 'T' value for 'IComparable' type requires boxing of value type
(7): ReSharper HeapView Boxing: Boxing allocation: type testing 'T' value for 'IEquatable<T>' type requires boxing of value type
(8): ReSharper HeapView Boxing: Boxing allocation: type testing 'T' value for 'int' type requires boxing of value type
(9): ReSharper HeapView Boxing: Boxing allocation: type testing 'T' value for 'byte' type requires boxing of value type
