public class C {
  public void M1() {
    var s = new S();
    s.InstanceMethod();
    s.|GetType|(0)();
    s.|GetHashCode|(1)();
    s.Equals(null);
  }

  public void M2<T>(T t) where T : struct, I {
    t.InstanceMethod();
    t.|GetType|(2)();
    t.|GetHashCode|(3)();
    t.|Equals|(4)(null);
  }

  public void M3<T>(T t) where T : I {
    t.InstanceMethod();
    t.|GetType|(5)();
    t.|GetHashCode|(6)();
    t.|Equals|(7)(null);
  }

  public struct S : I {
    public void InstanceMethod() { }
    public override bool Equals(object obj) {
      return base.|Equals|(8)(null);
    }
  }

  public interface I {
    void InstanceMethod();
  }
}
---------------------------------------------------------
(0): ReSharper HeapView Boxing: Boxing allocation: special 'Object.GetType()' method invocation over the value type instance
(1): ReSharper HeapView Boxing: Boxing allocation: inherited 'ValueType.GetHashCode()' virtual method invocation over the value type instance
(2): ReSharper HeapView Boxing: Boxing allocation: special 'Object.GetType()' method invocation over the value type instance
(3): ReSharper HeapView Boxing: Possible boxing allocation: inherited 'ValueType.GetHashCode()' virtual method invocation over the value type instance if 'T' type parameter will be substituted with the value type that do not overrides 'GetHashCode' virtual method
(4): ReSharper HeapView Boxing: Possible boxing allocation: inherited 'ValueType.Equals()' virtual method invocation over the value type instance if 'T' type parameter will be substituted with the value type that do not overrides 'Equals' virtual method
(5): ReSharper HeapView Boxing: Possible boxing allocation: special 'Object.GetType()' method may be invoked over the value type instance if 'T' type parameter will be substituted with the value type
(6): ReSharper HeapView Boxing: Possible boxing allocation: inherited 'Object.GetHashCode()' virtual method invocation over the value type instance if 'T' type parameter will be substituted with the value type that do not overrides 'GetHashCode' virtual method
(7): ReSharper HeapView Boxing: Possible boxing allocation: inherited 'Object.Equals()' virtual method invocation over the value type instance if 'T' type parameter will be substituted with the value type that do not overrides 'Equals' virtual method
(8): ReSharper HeapView Boxing: Boxing allocation: inherited 'ValueType.Equals()' virtual method invocation over the value type instance
