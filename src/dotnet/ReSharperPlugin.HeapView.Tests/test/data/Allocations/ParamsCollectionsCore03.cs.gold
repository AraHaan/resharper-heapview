using System.Collections.Immutable;
// ReSharper disable RedundantExplicitParamsArrayCreation

var array = ImmutableArray.Create(1);

ParamsBuilder<int>();
ParamsBuilder<int>([]);
ParamsBuilder(|1|(0));
ParamsBuilder(|[1]|(1));
ParamsBuilder(|1|(2), 2, 3);
ParamsBuilder(|[|(3)1, 2, 3]);
ParamsBuilder(|"abc"|(4));
ParamsBuilder(|["a|(5)bc"]);
ParamsBuilder(array);
ParamsBuilder(|"abc"|(6), args[0]);
ParamsBuilder(|["a|(7)bc", args[0]]);
return;

void ParamsBuilder<T>(params ImmutableArray<T> xs)
{
  _ = xs;
}
---------------------------------------------------------
(0): ReSharper HeapView Allocation: Object allocation: new 'int[]' array instance creation for params parameter 'xs'
(1): ReSharper HeapView Allocation: Object allocation: new 'int[]' array instance creation
(2): ReSharper HeapView Allocation: Object allocation: new 'int[]' array instance creation for params parameter 'xs'
(3): ReSharper HeapView Allocation: Object allocation: new 'int[]' array instance creation
(4): ReSharper HeapView Allocation: Object allocation: new 'string[]' array instance creation for params parameter 'xs'
(5): ReSharper HeapView Allocation: Object allocation: new 'string[]' array instance creation
(6): ReSharper HeapView Allocation: Object allocation: new 'string[]' array instance creation for params parameter 'xs'
(7): ReSharper HeapView Allocation: Object allocation: new 'string[]' array instance creation
