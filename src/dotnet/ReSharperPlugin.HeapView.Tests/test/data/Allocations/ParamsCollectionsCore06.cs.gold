using System.Collections.Generic;
// ReSharper disable RedundantExplicitParamsArrayCreation

ParamsEnumerable<int>();
ParamsEnumerable<int>([]);
ParamsEnumerable(|1|(0));
ParamsEnumerable(|[1]|(1));
ParamsEnumerable(|1|(2), 2, 3);
ParamsEnumerable(|[|(3)1, 2, 3]);
ParamsEnumerable("abc");
ParamsEnumerable(|["a|(4)bc"]);
ParamsEnumerable(|new|(5) List<string> { "aa" });
ParamsEnumerable(|"abc"|(6), args[0]);
ParamsEnumerable(|["a|(7)bc", args[0]]);
return;

void ParamsEnumerable<T>(params IEnumerable<T> xs)
{
  _ = xs;
}
---------------------------------------------------------
(0): ReSharper HeapView Allocation: Object allocation: new 'IEnumerable<int>' implementation instance creation for params parameter 'xs'
(1): ReSharper HeapView Allocation: Object allocation: new 'IEnumerable<int>' implementation instance creation
(2): ReSharper HeapView Allocation: Object allocation: new array and 'IEnumerable<int>' implementation instance creation for params parameter 'xs'
(3): ReSharper HeapView Allocation: Object allocation: new array and 'IEnumerable<int>' implementation instance creation
(4): ReSharper HeapView Allocation: Object allocation: new 'IEnumerable<string>' implementation instance creation
(5): ReSharper HeapView Allocation: Object allocation: new 'List<string>' instance creation
(6): ReSharper HeapView Allocation: Object allocation: new array and 'IEnumerable<string>' implementation instance creation for params parameter 'xs'
(7): ReSharper HeapView Allocation: Object allocation: new array and 'IEnumerable<string>' implementation instance creation
