using System;
using System.Collections;
using System.Collections.Generic;

List<int> xs1 = |[]|(0);
List<int> xs2 = |[1]|(1);
List<int> xs3 = |[12]|(2);
List<int> xs4 = |[12|(3)3];
List<int> xs5 = |[12|(4)34];
List<int> xs6 = |[12|(5)345,67890];

C1 cs1 = |[]|(6);
C1 cs2 = |["1|(7)23"];

C2 ds1 = |[]|(8);
C2 ds2 = |[12|(9)3, 456];

if (args.Length > 0)
{
  List<bool> xssss = [true, true, false];
  throw new Exception();
}

class C1 : IEnumerable
{
  public void Add(object x) { }
  public IEnumerator GetEnumerator() { yield break; }
}

class C2 : IEnumerable<int>
{
  public void Add(int x) { }
  IEnumerator IEnumerable.GetEnumerator() { yield break; }
  IEnumerator<int> IEnumerable<int>.GetEnumerator() { yield break; }
}
---------------------------------------------------------
(0): ReSharper HeapView Allocation: Object allocation: new 'List<int>' instance creation
(1): ReSharper HeapView Allocation: Object allocation: new 'List<int>' instance creation
(2): ReSharper HeapView Allocation: Object allocation: new 'List<int>' instance creation
(3): ReSharper HeapView Allocation: Object allocation: new 'List<int>' instance creation
(4): ReSharper HeapView Allocation: Object allocation: new 'List<int>' instance creation
(5): ReSharper HeapView Allocation: Object allocation: new 'List<int>' instance creation
(6): ReSharper HeapView Allocation: Object allocation: new 'C1' instance creation
(7): ReSharper HeapView Allocation: Object allocation: new 'C1' instance creation
(8): ReSharper HeapView Allocation: Object allocation: new 'C2' instance creation
(9): ReSharper HeapView Allocation: Object allocation: new 'C2' instance creation
