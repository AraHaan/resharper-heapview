// ReSharper disable UnusedVariable
// ReSharper disable RedundantStringInterpolation
using System;

public class StringInterpolationExpression
{
  private const string ConstPart = "const";

  public StringInterpolationExpression(int value, string text)
  {
    var string00 = $"empty{{";
    var string01 = |$"|(0)value={|value|(1)}"; // alloc, format, boxing
    var string02 = |$"|(2)text={text}"; // alloc, concat
    var string03 = |$"|(3)text={text,-1}"; // alloc, format
    var string04 = |$"|(4)text={ConstPart}"; // alloc, concat
  }
}
---------------------------------------------------------
(0): ReSharper HeapView Allocation: Object allocation: new 'String' instance creation
(1): ReSharper HeapView Boxing: Boxing allocation: conversion from 'int' to 'object' requires boxing of the value type
(2): ReSharper HeapView Allocation: Object allocation: new 'String' instance creation ('String.Concat' method call)
(3): ReSharper HeapView Allocation: Object allocation: new 'String' instance creation
(4): ReSharper HeapView Allocation: Object allocation: new 'String' instance creation ('String.Concat' method call)
