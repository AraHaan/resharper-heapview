using System.Collections;

_ = new Foo { |1|(0), |2|(1), "aaa", |{ 1, true }|(2) };
_ 

struct Foo : IFoo, IEnumerable
{
  public IEnumerator GetEnumerator() { yield break; }
}

interface IFoo { }

static class Extensions
{
  public static void Add(this IFoo foo, int item) { }
  public static void Add(this Foo foo, string item) { }
  public static void Add(this IFoo foo, int item, bool flag) { }
}
---------------------------------------------------------
(0): ReSharper HeapView Boxing: Boxing allocation: conversion from 'Foo' to 'IFoo' requires boxing of the value type
(1): ReSharper HeapView Boxing: Boxing allocation: conversion from 'Foo' to 'IFoo' requires boxing of the value type
(2): ReSharper HeapView Boxing: Boxing allocation: conversion from 'Foo' to 'IFoo' requires boxing of the value type
