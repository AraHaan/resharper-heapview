using System;

var s = new S();

checked(s.Method)();
var naturalType = |s|(0).Method;
var naturalFunc = |s|(1).Func;
Action action = |s|(2).Method;
object obj = |s|(3).Method;
Delegate del = |s|(4).Method;
var customDelegate = |s|(5).Custom;
var toString = |s|(6).ToString;
Func<int> ghc = |s|(7).GetHashCode;
var equals = |s|(8).Equals;
var name = nameof(s.Method);

struct S
{
  public void Method() { }
  public string Func(int x) => x.ToString();
  public int Custom(ref int x) => x;
}
---------------------------------------------------------
(0): ReSharper HeapView Boxing: Boxing allocation: conversion of value type 'S' instance method to 'Action' delegate type
(1): ReSharper HeapView Boxing: Boxing allocation: conversion of value type 'S' instance method to 'Func<int,string>' delegate type
(2): ReSharper HeapView Boxing: Boxing allocation: conversion of value type 'S' instance method to 'Action' delegate type
(3): ReSharper HeapView Boxing: Boxing allocation: conversion of value type 'S' instance method to 'Action' delegate type
(4): ReSharper HeapView Boxing: Boxing allocation: conversion of value type 'S' instance method to 'Action' delegate type
(5): ReSharper HeapView Boxing: Boxing allocation: conversion of value type 'S' instance method to 'anonymous int delegate(ref int arg)' delegate type
(6): ReSharper HeapView Boxing: Boxing allocation: conversion of value type 'S' instance method to 'Func<string>' delegate type
(7): ReSharper HeapView Boxing: Boxing allocation: conversion of value type 'S' instance method to 'Func<int>' delegate type
(8): ReSharper HeapView Boxing: Boxing allocation: conversion of value type 'S' instance method to 'Func<object,bool>' delegate type
