using System;

class TypeTests
{
  public bool Test01<T>(T t) => t is |int|(0); // possible
  public bool Test02<T>(T t) => t is |IConvertible|(1); // possible
  public bool Test03<T>(T t) where T : struct => t is |int|(2); // yes
  public bool Test04<T>(T t) where T : struct => t is |IConvertible|(3); // yes
  public bool Test05<T>(T t) where T : class => t is int;
  public bool Test06<T>(T t) where T : class => t is IConvertible;
}
---------------------------------------------------------
(0): ReSharper HeapView Boxing: Possible boxing allocation: type testing 'T' value for 'int' type in .NET Framework projects possibly requires boxing of the value type
(1): ReSharper HeapView Boxing: Possible boxing allocation: type testing 'T' value for 'IConvertible' type in .NET Framework projects possibly requires boxing of the value type
(2): ReSharper HeapView Boxing: Boxing allocation: type testing 'T' value for 'int' type in .NET Framework projects requires boxing of the value type
(3): ReSharper HeapView Boxing: Boxing allocation: type testing 'T' value for 'IConvertible' type in .NET Framework projects requires boxing of the value type
