Owner: top-level code
Closures:
> local function 'object LocalFunction(int parameter)'
> lambda expression 'int () => parameter + localVariable'
    Captures:
    > parameter 'parameter'
    > local variable 'localVariable'
Display classes:
  Display class #1
    Scope: IBlock '{ int localVariable = 0; return () => pa...'
    Members:
    > parameter 'parameter'
    > local variable 'localVariable'
    Closures:
    > lambda expression 'int () => parameter + localVariable'

========
Owner: operator 'object C.operator +(C parameter)'
Closures:
> lambda expression 'C () => parameter'
    Captures:
    > parameter 'parameter'
Display classes:
  Display class #1
    Scope: IArrowExpressionClause '=> () => parameter'
    Members:
    > parameter 'parameter'
    Closures:
    > lambda expression 'C () => parameter'

========
