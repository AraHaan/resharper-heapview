Owner: constructor 'Base.Base(Func<int> func)'

========
Owner: record 'R'
Closures:
> lambda expression 'int () => X + Y + 2'
    Captures:
    > parameter 'X'
    > parameter 'Y'
> lambda expression 'int () => x + X'
    Captures:
    > local variable 'x'
    > parameter 'X'
> lambda expression 'int () => X + Y + 1'
    Captures:
    > parameter 'X'
    > parameter 'Y'
Display classes:
  Display class #1
    Scope: IRecordDeclaration 'partial record R(int X, int Y) : Base(()...'
    Members:
    > parameter 'X'
    > parameter 'Y'
    Closures:
    > lambda expression 'int () => X + Y + 1'
  Display class #2
    Scope: IRecordDeclaration 'partial record R { public bool Member = ...'
    Members:
    > parameter 'X'
    > parameter 'Y'
    Closures:
    > lambda expression 'int () => X + Y + 2'
  Display class #3
    Scope: IPropertyDeclaration 'public bool OtherMember { get; } = X is ...'
    Members:
    > local variable 'x'
    > display class #2
    Closures:
    > lambda expression 'int () => x + X'

========
Owner: method 'bool R.F(Func<int> f)'

========
Owner: record 'R'
Closures:
> lambda expression 'int () => X + Y + 2'
    Captures:
    > parameter 'X'
    > parameter 'Y'
> lambda expression 'int () => x + X'
    Captures:
    > local variable 'x'
    > parameter 'X'
> lambda expression 'int () => X + Y + 1'
    Captures:
    > parameter 'X'
    > parameter 'Y'
Display classes:
  Display class #1
    Scope: IRecordDeclaration 'partial record R(int X, int Y) : Base(()...'
    Members:
    > parameter 'X'
    > parameter 'Y'
    Closures:
    > lambda expression 'int () => X + Y + 1'
  Display class #2
    Scope: IRecordDeclaration 'partial record R { public bool Member = ...'
    Members:
    > parameter 'X'
    > parameter 'Y'
    Closures:
    > lambda expression 'int () => X + Y + 2'
  Display class #3
    Scope: IPropertyDeclaration 'public bool OtherMember { get; } = X is ...'
    Members:
    > local variable 'x'
    > display class #2
    Closures:
    > lambda expression 'int () => x + X'

========
